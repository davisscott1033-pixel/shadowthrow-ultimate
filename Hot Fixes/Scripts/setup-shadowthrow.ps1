# setup-shadowthrow.ps1
# One-shot setup for ShadowThrow monorepo:
# - Fix Next.js config in apps/web (serverActions -> {} if boolean)
# - Create apps/imported/.env.local with generated NEXTAUTH_SECRET (keeps existing if present)
# - pnpm install (workspace)
# - Prisma generate/push/seed for apps/imported
# - Launch dev servers for web (3000) and imported (3001) in separate terminals

$ErrorActionPreference = "Stop"

function Write-Info($m){ Write-Host "[INFO] $m" -ForegroundColor Cyan }
function Write-Ok($m){ Write-Host "[OK]  $m" -ForegroundColor Green }
function Write-Warn($m){ Write-Host "[WARN] $m" -ForegroundColor Yellow }
function Write-Err($m){ Write-Host "[ERR] $m" -ForegroundColor Red }

# Resolve repo root (script location)
$RepoRoot = Split-Path -Parent $MyInvocation.MyCommand.Path
Set-Location $RepoRoot
Write-Info "Repo root: $RepoRoot"

# Paths
$WebDir = Join-Path $RepoRoot "apps\web"
$ImportedDir = Join-Path $RepoRoot "apps\imported"
$WebConfig = Join-Path $WebDir "next.config.mjs"
$ImportedEnv = Join-Path $ImportedDir ".env.local"
$ImportedEnvExample = Join-Path $ImportedDir ".env.example"

if (-not (Test-Path $WebDir) -or -not (Test-Path $ImportedDir)) {
  Write-Err "Expected apps\web and apps\imported to exist under $RepoRoot"
  exit 1
}

# 1) Fix next.config.mjs (serverActions must be an object in Next 15)
if (Test-Path $WebConfig) {
  $content = Get-Content $WebConfig -Raw
  # Replace serverActions: true with serverActions: {}
  $fixed = $content -replace 'serverActions\s*:\s*true', 'serverActions: {}'
  if ($fixed -ne $content) {
    Set-Content $WebConfig $fixed -Encoding UTF8
    Write-Ok "Patched apps/web/next.config.mjs (serverActions -> {})"
  } else {
    Write-Info "apps/web/next.config.mjs already OK or no serverActions boolean found"
  }
} else {
  Write-Warn "apps/web/next.config.mjs not found; skipping patch"
}

# 2) Ensure .env.local for apps/imported
if (Test-Path $ImportedEnv) {
  Write-Info "apps/imported/.env.local exists; leaving in place"
} else {
  $secret = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes([Guid]::NewGuid().ToString() + ":" + (Get-Random)))
  $envContent = @"
# Generated by setup-shadowthrow.ps1
NEXTAUTH_URL=http://localhost:3001
NEXTAUTH_SECRET=$secret

# Stripe (replace with your test/real keys)
STRIPE_PUBLISHABLE_KEY=pk_test_xxx
STRIPE_SECRET_KEY=sk_test_xxx
# Optional if testing webhooks locally with Stripe CLI
STRIPE_WEBHOOK_SECRET=whsec_xxx

# Site URL used in redirects
NEXT_PUBLIC_SITE_URL=http://localhost:3001

# Prisma (SQLite) â€” keep default unless you move the DB
DATABASE_URL=file:./prisma/shadowthrow.sqlite
"@
  Set-Content $ImportedEnv $envContent -Encoding UTF8
  Write-Ok "Created apps/imported/.env.local with a generated NEXTAUTH_SECRET (fill Stripe keys)"
}

# 3) Install workspace deps
try {
  Write-Info "Running pnpm install (workspace)"
  pnpm install --reporter=append-only | Out-Host
  Write-Ok "pnpm install complete"
} catch {
  Write-Err "pnpm install failed: $($_.Exception.Message)"
  Write-Err "Run 'pnpm -v'. If pnpm not found, run your Corepack fix first."
  exit 1
}

# 4) Prisma: generate, push, seed for imported app
try {
  Write-Info "Prisma generate (imported)"
  pnpm --filter imported run db:generate | Out-Host
  Write-Info "Prisma db push (imported)"
  pnpm --filter imported run db:push | Out-Host
  Write-Info "Prisma seed (imported)"
  pnpm --filter imported run db:seed | Out-Host
  Write-Ok "Database ready (SQLite)"
} catch {
  Write-Err "Prisma step failed: $($_.Exception.Message)"
  Write-Err "Check DATABASE_URL and that prisma is installed for 'imported'."
  exit 1
}

# 5) Launch dev servers in new terminals
Write-Info "Launching web (3000) and imported (3001) in separate terminals"
Start-Process powershell -ArgumentList "-NoExit", "-Command", "Set-Location `"$RepoRoot`"; pnpm --filter web dev"
Start-Process powershell -ArgumentList "-NoExit", "-Command", "Set-Location `"$RepoRoot`"; pnpm --filter imported dev"

Write-Ok "Setup complete. Open http://localhost:3000 (web) and http://localhost:3001 (imported)"
Write-Info "Login: admin@shadowthrow.dev / change-me (from seed). Update after first login."
